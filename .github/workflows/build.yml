name: Build Test and Release

on:
  push:
    branches:
      - master
      - beta
      - "feature/*"
      - "fix/*"
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.5.x"

      - name: Version with GitVersion # https://github.com/marketplace/actions/use-actions
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7

      - name: Build windows x64
        run: go build -v ./nitrado/
        env:
          GOOS: windows
          GOARCH: amd64

      - name: Build linux x86
        run: go build -v ./nitrado/
        env:
          GOOS: linux
          GOARCH: 386

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code
        uses: actions/checkout@v2

      - name: Test
        run: go test -v -race -coverprofile=cover.out ./nitrado/

      - name: Go Vet
        run: go vet ./nitrado/

      - name: Install deepsource CLI
        run: curl https://deepsource.io/cli | sh

      - name: Upload Coverage data to deepsource
        run: ./bin/deepsource report --analyzer test-coverage --key go --value-file ./cover.out
        env:
          DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          coverageLocations: ./cover.out
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage to CodeClimate
        uses: paambaati/codeclimate-action@v2.7.5
        with:
          coverageLocations: ./cover.out:cover
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code
        uses: actions/checkout@v2

      - name: Run golangci-lint # https://github.com/marketplace/actions/run-golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   needs: [test, lint]
  #   steps:
  #     - name: Version with GitVersion # https://github.com/marketplace/actions/use-actions
  #       id: gitversion
  #       uses: gittools/actions/gitversion/execute@v0.9.5
  #     - name: Push version tag
  #       uses: tvdias/github-tagger@v0.0.1
  #       with:
  #         repo-token: ${{ secrets.GITHUB_TOKEN }}
  #         tag: ${{ steps.gitversion.outputs.FullSemVer }}
